{"version":3,"sources":["Context/TodoContext.js","Context/action.types.js","Components/Todos.js","Context/reducer.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","Todos","useContext","todos","dispatch","ListGroup","className","map","todo","ListGroupItem","todoString","onClick","type","payload","id","state","action","filter","TodoForm","useState","setTodoString","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","App","useReducer","todoReducer","Provider","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEaA,EAAcC,0BCFdC,EAAW,WACXC,EAAc,c,OCiCZC,EA7BD,WACZ,MAA4BC,qBAAWL,GAA/BM,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,8BACE,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACGH,EAAMI,KAAI,SAACC,GAAD,OACT,eAACC,EAAA,EAAD,WACGD,EAAKE,WACN,mCACE,sBACEJ,UAAU,aACVK,QAAS,WACPP,EAAS,CACPQ,KAAMZ,EACNa,QAASL,EAAKM,MALpB,SASE,cAAC,IAAD,UAZcN,EAAKM,Y,QCTpB,WAACC,EAAOC,GACrB,OAAQA,EAAOJ,MACb,KAAKb,EACH,MAAM,GAAN,mBAAWgB,GAAX,CAAkBC,EAAOH,UAC3B,KAAKb,EACH,OAAOe,EAAME,QAAO,SAACT,GAAD,OAAUA,EAAKM,KAAOE,EAAOH,WACnD,QACE,OAAOE,I,wDCgDEG,EA3CE,WACf,MAAoCC,mBAAS,IAA7C,mBAAOT,EAAP,KAAmBU,EAAnB,KACQhB,EAAaF,qBAAWL,GAAxBO,SAkBR,OACE,8BACE,cAACiB,EAAA,EAAD,CAAMC,SAlBW,SAACC,GAEpB,GADAA,EAAEC,iBACiB,KAAfd,EACF,OAAOe,MAAM,uBAEf,IAAMjB,EAAO,CACXE,aACAI,GAAIY,eAENtB,EAAS,CACPQ,KAAMb,EACNc,QAASL,IAEXY,EAAc,KAKZ,SACE,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEjB,KAAK,OACLkB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOtB,EACPuB,SAAU,SAACV,GAAD,OAAOH,EAAcG,EAAEW,OAAOF,UAE1C,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,6BCvBCC,EAhBH,WACV,MAA0BC,qBAAWC,EAAa,IAAlD,mBAAOtC,EAAP,KAAcC,EAAd,KAEA,OACE,8BACE,cAACP,EAAY6C,SAAb,CAAsBV,MAAO,CAAE7B,QAAOC,YAAtC,SACE,eAACuC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,YCPKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9edb94df.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const TodoContext = createContext();\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\n","import React, { useContext } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { FaCheckDouble } from \"react-icons/fa\";\r\nimport { TodoContext } from \"../Context/TodoContext\";\r\nimport { REMOVE_TODO } from \"../Context/action.types\";\r\nconst Todos = () => {\r\n  const { todos, dispatch } = useContext(TodoContext);\r\n\r\n  return (\r\n    <div>\r\n      <ListGroup className=\"mt-5 mb-5 items\">\r\n        {todos.map((todo) => (\r\n          <ListGroupItem key={todo.id}>\r\n            {todo.todoString}\r\n            <>\r\n              <span\r\n                className=\"pull-right\"\r\n                onClick={() => {\r\n                  dispatch({\r\n                    type: REMOVE_TODO,\r\n                    payload: todo.id,\r\n                  });\r\n                }}\r\n              >\r\n                <FaCheckDouble />\r\n              </span>\r\n            </>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { ADD_TODO, REMOVE_TODO } from \"./action.types\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case REMOVE_TODO:\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport \"../App.css\";\r\nimport { v4 } from \"uuid\";\r\nimport { TodoContext } from \"../Context/TodoContext\";\r\nimport { ADD_TODO } from \"../Context/action.types\";\r\n\r\nconst TodoForm = () => {\r\n  const [todoString, setTodoString] = useState(\"\");\r\n  const { dispatch } = useContext(TodoContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (todoString === \"\") {\r\n      return alert(\"PLEASE ENTER A TODO\");\r\n    }\r\n    const todo = {\r\n      todoString,\r\n      id: v4(),\r\n    };\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo,\r\n    });\r\n    setTodoString(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"todo\"\r\n              id=\"todo\"\r\n              placeholder=\"Your next Todo\"\r\n              value={todoString}\r\n              onChange={(e) => setTodoString(e.target.value)}\r\n            />\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <Button color=\"warning\">Add</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useReducer } from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Todos from \"./Components/Todos\";\nimport { TodoContext } from \"./Context/TodoContext\";\nimport todoReducer from \"./Context/reducer\";\n\nimport TodoForm from \"./Components/TodoForm\";\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(todoReducer, []);\n\n  return (\n    <div>\n      <TodoContext.Provider value={{ todos, dispatch }}>\n        <Container fluid>\n          <h1>Todo App with Context API</h1>\n          <Todos />\n          <TodoForm />\n        </Container>\n      </TodoContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}